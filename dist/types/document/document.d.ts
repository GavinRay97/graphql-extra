import type * as GQL from 'graphql';
import { Api, Ast } from '../internal';
import { Typename, Directivename, Fragmentname } from '../types';
import { DocumentBaseApi } from './document-base';
/**
 * API for GraphQL `DocumentNode` with schema
 *
 * @category API Public
 */
export declare class DocumentApi extends DocumentBaseApi {
    clone(): DocumentApi;
    hasSchemaDefinition(): boolean;
    getSchemaDefinition(): Api.SchemaDefinitionApi | undefined;
    createSchemaDefinition(props: Ast.SchemaDefinitionNodeProps): this;
    updateSchemaDefinition(props: Partial<Ast.SchemaDefinitionNodeProps>): this;
    upsertSchemaDefinition(props: Ast.SchemaDefinitionNodeProps): this;
    removeSchemaDefinition(): this;
    hasSchemaExtension(): boolean;
    getSchemaExtension(): Api.SchemaExtensionApi | undefined;
    createSchemaExtension(props: Ast.SchemaExtensionNodeProps): this;
    updateSchemaExtension(props: Partial<Ast.SchemaExtensionNodeProps>): this;
    upsertSchemaExtension(props: Ast.SchemaExtensionNodeProps): this;
    removeSchemaExtension(): this;
    getOperationRoot(operation: GQL.OperationTypeNode): Api.ObjectTypeApi | undefined;
    getQuery(): Api.ObjectTypeApi | undefined;
    getMutation(): Api.ObjectTypeApi | undefined;
    getSubscription(): Api.ObjectTypeApi | undefined;
    getAllOperations(): Api.OperationDefinitionApi[];
    getOperationNames(): (string | undefined)[];
    getOperation(operationname?: string): Api.OperationDefinitionApi;
    hasOperation(operationname?: string): boolean;
    createOperation(props: Ast.OperationDefinitionNodeProps | GQL.OperationDefinitionNode): this;
    updateOperation(operationname: string | undefined, props: Ast.OperationDefinitionNodeProps | GQL.OperationDefinitionNode): this;
    upsertOperation(props: Ast.OperationDefinitionNodeProps | GQL.OperationDefinitionNode): this;
    removeOperation(operationname: string | undefined): this;
    getAllFragments(): Api.FragmentDefinitionApi[];
    getFragmentNames(): Fragmentname[];
    getFragment(fragmentname: Fragmentname): Api.FragmentDefinitionApi;
    hasFragment(fragmentname: Fragmentname): boolean;
    createFragment(props: Ast.FragmentDefinitionNodeProps | GQL.FragmentDefinitionNode): this;
    updateFragment(fragmentname: Fragmentname, props: Ast.FragmentDefinitionNodeProps | GQL.FragmentDefinitionNode): this;
    upsertFragment(props: Ast.FragmentDefinitionNodeProps | GQL.FragmentDefinitionNode): this;
    removeFragment(fragmentname: Fragmentname): this;
    getAllTypes(): Api.TypeDefinitonApi[];
    getAllScalarTypes(): Api.ScalarTypeApi[];
    getAllObjectTypes(): Api.ObjectTypeApi[];
    getAllInterfaceTypes(): Api.InterfaceTypeApi[];
    getAllUnionTypes(): Api.UnionTypeApi[];
    getAllEnumTypes(): Api.EnumTypeApi[];
    getAllInputTypes(): Api.InputTypeApi[];
    getAllExts(): Api.TypeExtensionApi[];
    getAllScalarExts(): Api.ScalarExtApi[];
    getAllObjectExts(): Api.ObjectExtApi[];
    getAllInterfaceExts(): Api.InterfaceExtApi[];
    getAllUnionExts(): Api.UnionExtApi[];
    getAllEnumExts(): Api.EnumExtApi[];
    getAllInputExts(): Api.InputExtApi[];
    hasType(typename: Typename): boolean;
    getType(typename: Typename): Api.TypeDefinitonApi;
    createType(typename: Typename): this;
    updateType(typename: Typename, props: Ast.TypeDefinitionNodeProps): this;
    upsertType(props: Ast.TypeDefinitionNodeProps): this;
    removeType(typename: Typename): this;
    hasExt(typename: Typename): boolean;
    getExt(typename: Typename): Api.TypeExtensionApi;
    createExt(typename: Typename): this;
    updateExt(typename: Typename, props: Ast.TypeExtensionNodeProps): this;
    upsertExt(props: Ast.TypeExtensionNodeProps): this;
    removeExt(typename: Typename): this;
    hasDirective(directivename: Directivename): boolean;
    getDirective(directivename: Directivename): Api.DirectiveDefinitionApi;
    getDirectives(): Api.DirectiveDefinitionApi[];
    getDirectiveNames(): Directivename[];
    createDirective(props: GQL.DirectiveDefinitionNode | Ast.DirectiveDefinitionNodeProps): this;
    updateDirective(directivename: Directivename, props: GQL.DirectiveDefinitionNode | Ast.DirectiveDefinitionNodeProps): this;
    upsertDirective(props: GQL.DirectiveDefinitionNode | Ast.DirectiveDefinitionNodeProps): this;
    removeDirective(directivename: Directivename): this;
    getScalarType(typename: Typename): Api.ScalarTypeApi;
    getObjectType(typename: Typename): Api.ObjectTypeApi;
    getInterfaceType(typename: Typename): Api.InterfaceTypeApi;
    getUnionType(typename: Typename): Api.UnionTypeApi;
    getEnumType(typename: Typename): Api.EnumTypeApi;
    getInputType(typename: Typename): Api.InputTypeApi;
    createScalarType(props: Ast.ScalarTypeDefinitionNodeProps | GQL.ScalarTypeDefinitionNode): this;
    createObjectType(props: Ast.ObjectTypeDefinitionNodeProps | GQL.ObjectTypeDefinitionNode): this;
    createInterfaceType(props: Ast.InterfaceTypeDefinitionNodeProps | GQL.InterfaceTypeDefinitionNode): this;
    createUnionType(props: Ast.UnionTypeDefinitionNodeProps | GQL.UnionTypeDefinitionNode): this;
    createEnumType(props: Ast.EnumTypeDefinitionNodeProps | GQL.EnumTypeDefinitionNode): this;
    createInputType(props: Ast.InputObjectTypeDefinitionNodeProps | GQL.InputObjectTypeDefinitionNode): this;
    updateScalarType(typename: Typename, props: Ast.ScalarTypeDefinitionNodeProps | GQL.ScalarTypeDefinitionNode): this;
    updateObjectType(typename: Typename, props: Ast.ObjectTypeDefinitionNodeProps | GQL.ObjectTypeDefinitionNode): this;
    updateInterfaceType(typename: Typename, props: Ast.InterfaceTypeDefinitionNodeProps | GQL.InterfaceTypeDefinitionNode): this;
    updateUnionType(typename: Typename, props: Ast.UnionTypeDefinitionNodeProps | GQL.UnionTypeDefinitionNode): this;
    updateEnumType(typename: Typename, props: Ast.EnumTypeDefinitionNodeProps | GQL.EnumTypeDefinitionNode): this;
    updateInputType(typename: Typename, props: Ast.InputObjectTypeDefinitionNodeProps | GQL.InputObjectTypeDefinitionNode): this;
    upsertScalarType(props: Ast.ScalarTypeDefinitionNodeProps | GQL.ScalarTypeDefinitionNode): this;
    upsertObjectType(props: Ast.ObjectTypeDefinitionNodeProps | GQL.ObjectTypeDefinitionNode): this;
    upsertInterfaceType(props: Ast.InterfaceTypeDefinitionNodeProps | GQL.InterfaceTypeDefinitionNode): this;
    upsertUnionType(props: Ast.UnionTypeDefinitionNodeProps | GQL.UnionTypeDefinitionNode): this;
    upsertEnumType(props: Ast.EnumTypeDefinitionNodeProps | GQL.EnumTypeDefinitionNode): this;
    upsertInputType(props: Ast.InputObjectTypeDefinitionNodeProps | GQL.InputObjectTypeDefinitionNode): this;
    removeScalarType(typename: Typename): this;
    removeObjectType(typename: Typename): this;
    removeInterfaceType(typename: Typename): this;
    removeUnionType(typename: Typename): this;
    removeEnumType(typename: Typename): this;
    removeInputType(typename: Typename): this;
    getScalarExt(typename: Typename): Api.ScalarExtApi;
    getObjectExt(typename: Typename): Api.ObjectExtApi;
    getInterfaceExt(typename: Typename): Api.InterfaceExtApi;
    getUnionExt(typename: Typename): Api.UnionExtApi;
    getEnumExt(typename: Typename): Api.EnumExtApi;
    getInputExt(typename: Typename): Api.InputExtApi;
    createScalarExt(props: Ast.ScalarTypeDefinitionNodeProps | GQL.ScalarTypeDefinitionNode): this;
    createObjectExt(props: Ast.ObjectTypeDefinitionNodeProps | GQL.ObjectTypeDefinitionNode): this;
    createInterfaceExt(props: Ast.InterfaceTypeDefinitionNodeProps | GQL.InterfaceTypeDefinitionNode): this;
    createUnionExt(props: Ast.UnionTypeDefinitionNodeProps | GQL.UnionTypeDefinitionNode): this;
    createEnumExt(props: Ast.EnumTypeDefinitionNodeProps | GQL.EnumTypeDefinitionNode): this;
    createInputExt(props: Ast.InputObjectTypeDefinitionNodeProps | GQL.InputObjectTypeDefinitionNode): this;
    updateScalarExt(typename: Typename, props: Ast.ScalarTypeDefinitionNodeProps | GQL.ScalarTypeDefinitionNode): this;
    updateObjectExt(typename: Typename, props: Ast.ObjectTypeDefinitionNodeProps | GQL.ObjectTypeDefinitionNode): this;
    updateInterfaceExt(typename: Typename, props: Ast.InterfaceTypeDefinitionNodeProps | GQL.InterfaceTypeDefinitionNode): this;
    updateUnionExt(typename: Typename, props: Ast.UnionTypeDefinitionNodeProps | GQL.UnionTypeDefinitionNode): this;
    updateEnumExt(typename: Typename, props: Ast.EnumTypeDefinitionNodeProps | GQL.EnumTypeDefinitionNode): this;
    updateInputExt(typename: Typename, props: Ast.InputObjectTypeDefinitionNodeProps | GQL.InputObjectTypeDefinitionNode): this;
    upsertScalarExt(props: Ast.ScalarTypeDefinitionNodeProps | GQL.ScalarTypeDefinitionNode): this;
    upsertObjectExt(props: Ast.ObjectTypeDefinitionNodeProps | GQL.ObjectTypeDefinitionNode): this;
    upsertInterfaceExt(props: Ast.InterfaceTypeDefinitionNodeProps | GQL.InterfaceTypeDefinitionNode): this;
    upsertUnionExt(props: Ast.UnionTypeDefinitionNodeProps | GQL.UnionTypeDefinitionNode): this;
    upsertEnumExt(props: Ast.EnumTypeDefinitionNodeProps | GQL.EnumTypeDefinitionNode): this;
    upsertInputExt(props: Ast.InputObjectTypeDefinitionNodeProps | GQL.InputObjectTypeDefinitionNode): this;
    removeScalarExt(typename: Typename): this;
    removeObjectExt(typename: Typename): this;
    removeInterfaceExt(typename: Typename): this;
    removeUnionExt(typename: Typename): this;
    removeEnumExt(typename: Typename): this;
    removeInputExt(typename: Typename): this;
}
/**
 * `DocumentSchemaApi` constructor fn
 *
 * @category API Public
 */
export declare function documentApi(node?: GQL.DocumentNode): DocumentApi;
